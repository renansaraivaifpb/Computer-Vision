Import Image
img = imread("Imagens\carBlack-04.png");
imshow(img)

Transformation to gray scale
imgGray = rgb2gray(img);
imshow(imgGray)

F = fspecial("average",12);
imgSmooth = imfilter(imgGray, F);
imgEnhanced = imadjust(imgSmooth);
title('img imgSmooth');
montage({imgGray, imgSmooth});
montage({imgSmooth, imgEnhanced});

function [BW,maskedImage] = segment_CarBlack(X)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the Image Segmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 03-Feb-2025
%----------------------------------------------------

X = rgb2gray(X);

F = fspecial("average",12);
X = imfilter(X, F);

% Adjust data to span data range.
X = imadjust(X);

% Threshold image with manual threshold
BW = im2gray(X) > 5.355000e+01;

% Draw ROIs

xPos = [618.9905 1156.7578 1158.5000];
yPos = [516.7578 307.6996 518.5000];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;
BW = ~BW;
% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

img1 = imread("Imagens\carBlack-01.png");
img2 = imread("Imagens\carBlack-02.png");
img3 = imread("Imagens\carBlack-03.png");
img4 = imread("Imagens\carBlack-04.png");

img_output1 = segment_CarBlack(img1);
img_output2 = segment_CarBlack(img2);
img_output3 = segment_CarBlack(img3);
img_output4 = segment_CarBlack(img4);

